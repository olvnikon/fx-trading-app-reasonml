// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function mapChunk(index, chunk) {
  return React.createElement("span", {
              key: String(index)
            }, chunk);
}

function mapChunks(chunks) {
  return $$Array.mapi(mapChunk, chunks);
}

function splitByChunks(value) {
  var result = value.match((/.{1,2}/g));
  if (result !== null) {
    return result;
  } else {
    return /* array */["00"];
  }
}

function mapLeftSide(leftSide) {
  return React.createElement("span", undefined, leftSide + ".");
}

function splitRateLeftRight(rate) {
  var result = Pervasives.string_of_float(rate).split(".");
  var match = Caml_array.caml_array_get(result, 0) !== "";
  var match$1 = Caml_array.caml_array_get(result, 1) !== "";
  if (match) {
    if (match$1) {
      return /* tuple */[
              Caml_array.caml_array_get(result, 0),
              Caml_array.caml_array_get(result, 1)
            ];
    } else {
      return /* tuple */[
              Caml_array.caml_array_get(result, 0),
              ""
            ];
    }
  } else {
    return /* tuple */[
            "",
            ""
          ];
  }
}

function mapRate(rate) {
  var match = splitRateLeftRight(rate);
  var chunks = splitByChunks(match[1]);
  return React.createElement("span", undefined, mapLeftSide(match[0]), $$Array.mapi(mapChunk, chunks));
}

exports.mapChunk = mapChunk;
exports.mapChunks = mapChunks;
exports.splitByChunks = splitByChunks;
exports.mapLeftSide = mapLeftSide;
exports.splitRateLeftRight = splitRateLeftRight;
exports.mapRate = mapRate;
/* react Not a pure module */
